#######################################
git clone ssh.....or http =>
	'' Makes a Git repository copy from a remote source. Also adds the original location as a remote source you can fetch from it again and push to it if you have permissions.''

git add =>
	''Adds files changes in your working directory to your index. Example: git add .''

git commit =>
	Takes all of the changes written in the index, creates a new commit object pointing to it and sets the branch to point to that new commit. 
	Examples: git commit -m ‘committing added changes’ 
		git commit -a -m ‘committing all changes == equals to git add and git commit’

git status =>
	Shows you the status of files in the index versus the working directory. It will list out files that are untracked (only in your working directory), modified (tracked but not yet updated in your index), and staged (added to your index and ready for committing). 

git log =>
	Shows a listing of commits on a branch including the corresponding details.

git show =>
	Shows information about a git object.

git pull =>
	Fetches the files from the remote repository and merges it with your local one. This command is equal to the git fetch and the git merge sequence. Example: git pull origin

git push =>

	Pushes all the modified local objects to the remote repository and advances its branches. Example: git push origin master.

git diff =>
	Generates patch files or statistics of differences between paths or files in your git repository, or your index or your working directory. Example: git diff.

git-cherry-pick =>
	Apply the changes introduced by some existing commits.

git branch =>
	Lists existing branches, including remote branches if ‘-a’ is provided. Creates a new branch if a branch name is provided. Example: git branch -a * master remotes/origin/master

git checkout =>
	Checks out a different branch – switches branches by updating the index, working tree, and HEAD to reflect the chosen branch. Example: git checkout newbranch
git merge =>
	Merges one or more branches into your current branch and automatically creates a new commit if there are no conflicts. Example: git merge newbranchversion

git reset =>
	Resets your index and working directory to the state of your last commit. Example: git reset --hard HEAD

git stash =>
	Temporarily saves changes that you don’t want to commit immediately. You can apply the changes later. Example: git stash Saved working directory and index state "WIP on master: 84f241e first commit" HEAD is now at 84f241e first commit (To restore them type "git stash apply")
